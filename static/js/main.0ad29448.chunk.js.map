{"version":3,"sources":["components/common/loader/FormsControls/FormControls.js","redux/dialogsPage-reducer.js","assest/images/loader.svg","components/Profile/MyPost/Post/Post/Post.module.css","components/NavBar/Navbar.module.css","components/utils/validators/validators.js","components/NavBar/Navbar.jsx","components/News/News.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","api/api.js","redux/users-reducer.js","components/Users/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","components/common/loader/loader.jsx","redux/users-selectors.js","components/Users/UsersContainer.jsx","redux/profilePage-reducer.js","components/Profile/MyPost/Post/Post/Post.jsx","components/Profile/MyPost/Post/MyPost.jsx","components/Profile/MyPost/Post/MyPostContainer.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Header/Header.jsx","redux/auth-reducer.js","components/Header/HeaderContainer.jsx","components/Login/login.jsx","redux/app-reducer.js","redux/sidebar-reducer.js","redux/redux-store.js","App.js","serviceWorker.js","index.js","components/common/loader/FormsControls/FormsControl.module.css","components/NavBar/friends/friends.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Login/login.module.css","components/Users/Paginator.module.css","components/Users/Users.module.css","components/Profile/MyPost/Post/MyPost.module.css","components/hoc/withAuthRedirect.js","components/Header/Header.module.css"],"names":["FormControl","_ref","input","meta","props","child","Object","C_react_way_of_samurai_ucheba_ucheba_2_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","hasError","touched","error","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","className","styles","formControl","children","someError","Textarea","restProps","assign","Input","createField","placeholder","name","validators","component","arguments","length","undefined","text","redux_form__WEBPACK_IMPORTED_MODULE_3__","validate","initialState","dialog","id","userMessageData","message","dialogsPageReducer","state","action","type","newDialogs","newDialogText","C_react_way_of_samurai_ucheba_ucheba_2_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","C_react_way_of_samurai_ucheba_ucheba_2_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","concat","addNewDialogCreate","module","exports","__webpack_require__","p","item","nav","activeLink","d","__webpack_exports__","required","maxLengthCreator","value","maxLength","Navbar","react_default","s","react_router_dom","to","activeClassName","News","Music","Settings","instance","axios","baseURL","withCredentials","headers","API-Key","UsersAPI","currentPage","pageSize","get","then","response","data","userId","post","delete","authAPI","header","profileAPI","profile","loginAPI","email","password","rememberMe","captcha","LogOut","getStatus","updateStatus","status","put","updatePhotos","photoFile","formData","FormData","append","Content-Type","information","securityAPI","users","totalUsersCount","isFetching","followingInProgress","setCurrentPage","toggleIsFetching","toggleFollowingProgress","usersReducer","objectSpread","map","u","followed","totalCount","toConsumableArray","filter","Paginator","onPageChanged","_ref$portionSize","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","_useState","useState","_useState2","slicedToArray","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginator","onClick","cn","defineProperty","selectedPage","pageNumber","key","e","User","unfollow","follow","user","objectWithoutProperties","src","photos","small","userPhoto","button","disabled","some","Users","Users_Paginator","Users_User","Reloader","loader","getUsers","createSelector","usersPage","UsersContainer","_this","this","Fragment","loader_loader","components_Users_Users","React","Component","compose","connect","getPageSize","getTotalUsersCount","getCurrentPage","getFetching","getFollowingInProgress","dispatch","resultCode","followSuccess","unfollowSuccess","page","items","posts","likecounts","socialNetworks","info","setUserProfile","setSocialNetworks","contacts","setStatus","setSuccessPhotos","file","profileThunk","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","sent","stop","_x","apply","profilePageReducer","newPost","newPostText","Post","maxLength10","AddMyPostReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","MyPost","console","log","postsElements","reverse","m","Post_Post_Post","content","values","addUser","postUser","MyPostContainer","profilePage","addUserCreate","editMode","setEditMode","_useState3","_useState4","useEffect","onDoubleClick","onBlur","autoFocus","onChange","currentTarget","ProfileDataReduxForm","keys","style","fromSummaryError","ProfileData","_ref2","isOwner","goToEditMode","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","ProfileInfo_Contact","contactTitle","contactValue","Contact","_ref3","ProfileInfo","updatePhotoSuccess","updateInformation","profileDescription","large","photoUrl","target","files","ProfileInfo_ProfileDataForm_ProfileDataForm","initialValues","ProfileInfo_ProfileData","ProfileStatusWithHooks","Profile","ProfileInfo_ProfileInfo","match","params","isAuth","Post_MyPostContainer","ProfileContainer","refreshProfile","authorizedUserId","history","prevProps","prevState","snapshot","components_Profile_Profile","auth","AuthRedirectComponent","withAuthRedirect","withUrlDataContainerComponent","withRouter","_callee2","_context2","_x2","_callee3","_context3","_x3","_ref4","_callee4","getState","_context4","stopSubmit","_error","messages","abrupt","Promise","reject","_x4","_x5","Header","loginBlock","login","captchaUrl","setAuthUserData","setCaptchaUrl","getAuthUserData","_response$data$data","getCaptchaUrl","url","authReducer","HeaderContainer","components_Header_Header","LoginReduxForm","box","pass","btn","LoginThunk","react_router","initialized","appReducer","Friends","img","reducers","combineReducers","dialogsPage","sideBar","formReducer","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","DialogsContainer","lazy","bind","App","InitializeApp","Header_HeaderContainer","NavBar_Navbar","react","fallback","path","render","Profile_ProfileContainer","Users_UsersContainer","Login_login","promise","all","Boolean","location","hostname","ReactDOM","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","container","block","title","activeNumber","mapStateToPropsForRedirect","RedirectComponent","_React$Component","C_react_way_of_samurai_ucheba_ucheba_2_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","C_react_way_of_samurai_ucheba_ucheba_2_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","C_react_way_of_samurai_ucheba_ucheba_2_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","C_react_way_of_samurai_ucheba_ucheba_2_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","C_react_way_of_samurai_ucheba_ucheba_2_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_5___default","react_router__WEBPACK_IMPORTED_MODULE_7__"],"mappings":"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","file":"static/js/main.0ad29448.chunk.js","sourcesContent":["import React from 'react';\r\nimport styles from './FormsControl.module.css';\r\nimport {Field} from \"redux-form\";\r\nimport s from \"../../../Login/login.module.css\";\r\nimport {required} from \"../../../utils/validators/validators\";\r\n\r\n\r\n\r\nexport const FormControl =({input,meta,child,...props})=>{\r\n\r\n    const hasError = meta.touched && meta.error\r\n    return (\r\n        <div className={ styles.formControl + \"  \" + (hasError ? styles.error : '')}>\r\n            <div>\r\n                {props.children}\r\n            </div>\r\n            {hasError && <span className= {styles.someError} > {meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport const Textarea =(props)=>{\r\n    const {input,child,meta, ...restProps} = props;\r\n    return <FormControl {...props}><textarea {...input}{...restProps}/></FormControl>\r\n}\r\nexport const Input =(props)=>{\r\n    const {input,child,meta, ...restProps} = props;\r\n    return <FormControl {...props}><input {...input}{...restProps}/></FormControl>\r\n\r\n}\r\nexport const createField =(placeholder,name,validators,component,className,props={},text='')=> {\r\n    return <div>\r\n        <Field placeholder={placeholder} name={name} validate={validators} component={component}\r\n               className={className}\r\n            {...props}/>{text}\r\n    </div>\r\n}","const ADDialogs = 'ADDialogs'\r\n\r\n\r\nlet initialState = {\r\n  dialog: [\r\n    { id: 1, name: 'Andrey' },\r\n    { id: 2, name: 'Nikolay' },\r\n    { id: 3, name: 'Sasha' },\r\n    { id: 4, name: 'Sveta' },\r\n    { id: 5, name: 'Timur' },\r\n    { id: 6, name: 'Uzbek' },\r\n  ],\r\n  userMessageData: [\r\n    { id: 1, message: 'Hi!' },\r\n    { id: 2, message: 'Want play to Apex?' },\r\n    { id: 3, message: 'Hahaha,Lol,I hope this joke!' },\r\n    { id: 1, message: 'Hi!' },\r\n    { id: 1, message: 'Hi!' },\r\n    { id: 1, message: 'Hi!' },\r\n  ],\r\n  \r\n}\r\n\r\nexport let dialogsPageReducer = (state = initialState, action) => {\r\n   switch (action.type) {\r\n        case ADDialogs:{\r\n            let newDialogs = {\r\n                id: 5,\r\n                message: action.newDialogText,\r\n            }\r\n            return {\r\n              ...state,\r\n              userMessageData : [...state.userMessageData,newDialogs],\r\n            }\r\n          }\r\n\r\n        default:\r\n          return  state;\r\n    }\r\n\r\n}\r\n\r\nexport let addNewDialogCreate =(newDialogText)=>{\r\n    return {\r\n      type: ADDialogs,\r\n      newDialogText\r\n    }\r\n  }\r\n  \r\n ","module.exports = __webpack_public_path__ + \"static/media/loader.3f133e5c.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1Gq4O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2xkdG\",\"item\":\"Navbar_item__14Y5w\",\"activeLink\":\"Navbar_activeLink__1Lh0A\"};","export const required=(value)=>{\r\n    if(value) return undefined; //можно null или наверное еще что нибудь,главное что бы была пустота\r\n    else return 'Field required'\r\n}\r\n\r\nexport const maxLengthCreator=(maxLength)=>(value)=>{\r\n    if(value.length > maxLength) return `Max Length is ${maxLength} symbols`;\r\n    return undefined;\r\n\r\n}\r\nexport const contactsEdit =()=>{\r\n\r\n}","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Friend from './friends/friends';\r\nimport  s from'./Navbar.module.css';\r\nconst Navbar = (props) => {\r\n   \r\n   \r\n \r\n   \r\n    return (\r\n        \r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to='/Profile' activeClassName={s.activeLink}>Profile</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/Dialogs' activeClassName={s.activeLink}>Messages</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/Users' activeClassName={s.activeLink}>Users</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/News' activeClassName={s.activeLink}>News</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/Music' activeClassName={s.activeLink}>Music</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/Settings' activeClassName={s.activeLink}>Settings</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/Todo' activeClassName={s.activeLink}>todo</NavLink>\r\n            </div>\r\n          \r\n            \r\n        </nav>\r\n        //<Friend Friends = {props.state.Friends}/>||||||\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport  s from'./News.module.css';\r\nconst News = () => {\r\n    return (\r\n     <h1>Hello News</h1>\r\n    )\r\n}\r\n\r\nexport default News;","import React from 'react';\r\nimport s from './Music.module.css';\r\nconst Music = () => {\r\n    return(\r\n      <h1>Hello Music</h1>\r\n    )\r\n}\r\n\r\nexport default Music;","import React from 'react';\r\nimport s from './Settings.module.css';\r\nconst Settings = () => {\r\n    return(\r\n      <h1>Hello Settings</h1>\r\n    )\r\n}\r\n\r\nexport default Settings;","import * as axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    withCredentials: true,\r\n    headers: {\r\n        \"API-Key\": 'd7c54c33-00e9-41b0-9eab-3a330ea414e1'\r\n    }\r\n})\r\nexport const UsersAPI ={\r\n     getUsers(currentPage,pageSize){\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n        .then((response) =>{\r\n        return response.data\r\n    });\r\n    },\r\n    follow(userId){\r\n        return instance.post(`follow/${userId}`)\r\n    }, \r\n    unfollow(userId){\r\n        return instance.delete(`follow/${userId}`)\r\n    }, \r\n    header(){\r\n        return authAPI.header()\r\n    }, \r\n    profile(userId){\r\n        return profileAPI.profile(userId)\r\n    }\r\n}\r\n\r\nexport const authAPI={\r\n    header(){\r\n        return instance.get(`auth/me`)\r\n    }, \r\n    loginAPI(email,password,rememberMe=false,captcha=null){\r\n        return instance.post(`auth/login`,{\r\n            email,\r\n            password,\r\n            rememberMe,\r\n            captcha,\r\n        })\r\n    },\r\n    LogOut(){\r\n        return instance.delete(`auth/login`)\r\n    }\r\n}\r\nexport const profileAPI = {\r\n    profile(userId){\r\n        return instance.get(`profile/`+ userId)\r\n    },\r\n    getStatus(userId){\r\n        return instance.get(`profile/status/`+ userId)\r\n    }, \r\n    updateStatus(status){\r\n        return instance.put(`profile/status`,{status: status,})\r\n    },\r\n    updatePhotos(photoFile){ //если хотите фото отправить,или файл,поэтому делать надо так\r\n        const formData = new FormData();\r\n        formData.append('image',photoFile)\r\n\r\n        return instance.put(`profile/photo`, formData, {\r\n            headers:{\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        })\r\n    },\r\n    information(profile){\r\n        return instance.put(`profile`,profile)\r\n    },\r\n};\r\n\r\nexport const securityAPI = {\r\n    getCaptchaUrl(){\r\n        return instance.get(`security/get-captcha-url`)\r\n    }\r\n\r\n}\r\n\r\n","import {UsersAPI} from '../api/api'\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW ='UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_USER_TOTAL_COUNT = 'SET_USER_TOTAL_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_FETCHING = 'TOGGLE_IS_FOLLOWING_FETCHING';\r\nlet initialState ={\r\n    users: [], \r\n    pageSize:10,//размер страницы\r\n    totalUsersCount:0,//сколько юзеров или данных будут приходить\r\n    currentPage:1,//текущая страница\r\n    isFetching:true,\r\n    followingInProgress:[],\r\n};\r\n\r\nconst usersReducer = (state = initialState,action) =>{\r\n\r\n    switch(action.type){\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users:state.users.map(u=>{\r\n                    if (u.id === action.userId) {\r\n                        return {...u,followed:true}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n\r\n\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users:state.users.map(u=>{\r\n                    if (u.id === action.userId) {\r\n                        return {...u,followed:false}\r\n                    }\r\n                    return u\r\n                })\r\n            }\r\n\r\n        case SET_USERS: {\r\n            return {...state,users: action.users}\r\n        }\r\n\r\n        case SET_CURRENT_PAGE:{\r\n            return {...state,currentPage: action.currentPage}\r\n        }\r\n\r\n        case SET_USER_TOTAL_COUNT:{\r\n            return {...state,totalUsersCount: action.totalCount}\r\n        }\r\n\r\n        case TOGGLE_IS_FETCHING:{\r\n            return {...state,isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_FETCHING : {\r\n            debugger\r\n            return {\r\n                ...state,\r\n                followingInProgress:action.followingInProgress\r\n                ?[...state.followingInProgress.action.userId]\r\n                :state.followingInProgress.filter(id => id!=action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const followSuccess = (userId) =>({type:FOLLOW,userId})\r\nexport const unfollowSuccess = (userId) =>({type:UNFOLLOW,userId})\r\nexport const setUsers = (users) =>({type:SET_USERS,users})\r\nexport const setCurrentPage = (currentPage) =>({type:SET_CURRENT_PAGE,currentPage})\r\nexport const setTotalUsersCount = (totalCount) =>({type:SET_USER_TOTAL_COUNT,totalCount})\r\nexport const toggleIsFetching = (isFetching)=>({type:TOGGLE_IS_FETCHING,isFetching})\r\nexport const toggleFollowingProgress = (isFetching,userId)=>({type:TOGGLE_IS_FOLLOWING_FETCHING,isFetching,userId})\r\n\r\nexport const  requestUsers =(page, pageSize)=>{\r\nreturn (dispatch)=>{\r\n    dispatch(toggleIsFetching(true));\r\n    dispatch(setCurrentPage(page))\r\n    UsersAPI.getUsers(page,pageSize).then((response) => {\r\n        dispatch(toggleIsFetching(false)); \r\n        dispatch(setUsers(response.items)); \r\n        dispatch(setTotalUsersCount(response.totalCount));     \r\n    })\r\n}\r\n}\r\n\r\n\r\n\r\n    export const  follow =(userId)=>{\r\n        return (dispatch)=>{\r\n            dispatch(toggleFollowingProgress(true,userId));\r\n            UsersAPI.follow(userId)\r\n            .then((response) => {\r\n                if (response.data.resultCode === 0) {\r\n                    dispatch(followSuccess(userId)) \r\n                }\r\n                dispatch(toggleFollowingProgress(false,userId))\r\n              })\r\n        }\r\n        }\r\n    \r\n        export const  unfollow =(userId)=>{\r\n            return (dispatch)=>{\r\n                dispatch(toggleFollowingProgress(true,userId));\r\n                UsersAPI.unfollow(userId)\r\n                .then((response) => {\r\n                    if (response.data.resultCode === 0) {\r\n                        dispatch(unfollowSuccess(userId)) \r\n                    }\r\n                    dispatch(toggleFollowingProgress(false,userId))\r\n                  })\r\n            }\r\n            }\r\n        \r\n\r\nexport default usersReducer","import React, {useState} from 'react';\r\nimport s from './Paginator.module.css';\r\nimport cn from 'classnames'\r\nlet Paginator =({pageSize,totalUsersCount,currentPage,onPageChanged,portionSize=10})=> {\r\n    let pagesCount = Math.ceil(totalUsersCount / pageSize)\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\nlet portionCount =  Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber,setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n    return <div className={s.paginator}>\r\n        {portionNumber > 1 &&\r\n            <button onClick={()=>{setPortionNumber(portionNumber -1)}}> PREV </button>}\r\n        {pages\r\n            .filter(p => p>= leftPortionPageNumber && p<=rightPortionPageNumber)\r\n            .map((p)=>{\r\n                return <span className={cn ({\r\n                    [s.selectedPage]: currentPage === p\r\n                    }, s.pageNumber)}\r\n                             key ={p}\r\n                             onClick={(e) =>\r\n                             {\r\n                                 onPageChanged(p)\r\n                             }}>{p}</span>\r\n                })}\r\n        {portionCount > portionNumber &&\r\n        <button onClick={()=>{setPortionNumber(portionNumber + 1)}}>NEXT</button>}\r\n\r\n    </div>\r\n\r\n}\r\nexport default Paginator","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport styles from './Users.module.css';\r\nlet User =({followingInProgress,unfollow,follow,user,...props})=> {\r\n    return <div>\r\n                <span>\r\n                    <div>\r\n                        <NavLink to={'/profile/' + user.id}>\r\n                         <img\r\n                             src={user.photos.small != null ? user.photos.small : 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSS78NndbZiK_0eG0HQCpI3zqFvdKfpkJCKSb3dcdpdSofQuOwtucAgSIH9LujQgU-xY7U&usqp=CAU'}\r\n                             className={styles.userPhoto}/>\r\n                        </NavLink>                    \r\n                    </div>\r\n                    <div>\r\n                        {user.followed\r\n                            ? <button className={styles.button} disabled={followingInProgress.some(id => id === user.id)}\r\n                                      onClick={() => {\r\n                                          unfollow(user.id)\r\n                                      }\r\n                                      }>Unfollow</button>\r\n                            : <button className={styles.button} disabled={followingInProgress.some(id => id === user.id)}\r\n                                      onClick={() => {\r\n                                          follow(user.id)\r\n                                      }}>Follow</button>}\r\n                    </div>\r\n                </span>\r\n        <span>\r\n                    <div>{user.name}</div>\r\n                    <div>{user.status}</div>\r\n                </span>\r\n        <span>\r\n                    \r\n                    <div>{'user.location.country'}</div>\r\n                    <div>{'user.location.city'}</div>\r\n                </span>\r\n    </div>\r\n\r\n}\r\n\r\nexport default User","import React from 'react';\r\nimport Paginator from \"./Paginator\";\r\nimport User from \"./User\";\r\nlet Users =({currentPage,onPageChanged,pageSize,totalUsersCount,...props})=> {\r\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize)\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    return <div>\r\n\r\n         <Paginator currentPage={currentPage} onPageChanged={onPageChanged} pageSize={pageSize}\r\n               totalUsersCount={totalUsersCount}/>\r\n\r\n        {\r\n            props.users.map(u => <User user={u}\r\n                                 follow={props.follow}\r\n                                 key={u.id}\r\n                                 followingInProgress={props.followingInProgress}\r\n                                 unfollow={props.unfollow}/>)\r\n        }\r\n\r\n    </div>\r\n    }\r\nexport default Users","import React from 'react';\r\nimport loader from './../../../assest/images/loader.svg';\r\nconst Reloader = () =>{\r\n   return <div>\r\n    <img src ={loader} />\r\n   </div>\r\n}\r\n\r\nexport default Reloader;","import { createSelector } from 'reselect'\r\n\r\nconst getUserSelector =(state)=>{\r\n    return state.usersPage.users\r\n}\r\n\r\nexport const getUsers = createSelector(getUserSelector,(users)=>{\r\n    return users.filter(u=>true)\r\n})\r\nexport const getPageSize =(state)=>{\r\n    return state.usersPage.pageSize\r\n}\r\nexport const getTotalUsersCount =(state)=>{\r\n    return state.usersPage.totalUsersCount\r\n}\r\nexport const getCurrentPage =(state)=>{\r\n    return state.usersPage.currentPage\r\n}\r\nexport const getFetching =(state)=>{\r\n    return state.usersPage.isFetching\r\n}\r\nexport const getFollowingInProgress=(state)=>{\r\n    return state.usersPage.followingInProgress\r\n}\r\n","import {connect} from 'react-redux'\r\n//import { followAC, setUserAC, unfollowAC , setCurrentPageAC, setTotalUsersCountAC , toggleIsFetchingAC} from '../../redux/users-reducer';\r\nimport { follow, unfollow , setCurrentPage,toggleFollowingProgress,requestUsers} from '../../redux/users-reducer';\r\nimport Users from './Users';\r\nimport React from 'react'\r\nimport Reloader from '../common/loader/loader';\r\nimport { withAuthRedirect } from '../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\nimport {\r\n    getCurrentPage,\r\n    getFetching, getFollowingInProgress,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsers,\r\n} from \"../../redux/users-selectors\";\r\n\r\nclass UsersContainer extends React.Component {\r\n    //constructor(props) {\r\n    //  super(props); //! синтаксис такой или хзбвроде писать такбно лучше прочитать об этом \r\n    //} //? можно не писать если стоит просто супер,оно это сделает автоматом \r\n      componentDidMount() { \r\n        this.props.getUsers(this.props.currentPage,this.props.pageSize)\r\n    };\r\n     \r\n      onPageChanged =(pageNumber) => {\r\n        this.props.getUsers(pageNumber,this.props.pageSize)\r\n      }\r\n  \r\n  render() {\r\n      return <> {/*фейк заглушка*/}\r\n      {this.props.isFetching?\r\n       <Reloader/>\r\n      :null}\r\n      <Users totalUsersCount={this.props.totalUsersCount}\r\n              pageSize={this.props.pageSize}\r\n              currentPage={this.props.currentPage}\r\n              onPageChanged={this.onPageChanged}\r\n              users={this.props.users}\r\n              unfollow={this.props.unfollow}\r\n              follow={this.props.follow}\r\n              followingInProgress={this.props.followingInProgress} />\r\n      </>\r\n      }\r\n  }\r\n  \r\n\r\nlet mapStateToProps = (state) =>{\r\n    return {\r\n        users:getUsers(state),\r\n        pageSize:getPageSize(state),\r\n        totalUsersCount:getTotalUsersCount(state),\r\n        currentPage:getCurrentPage(state),\r\n        isFetching:getFetching(state),\r\n        followingInProgress:getFollowingInProgress(state),\r\n    }\r\n};\r\n\r\n//let mapDispatchToProps = (dispatch) => {\r\n//    return{\r\n//        follow:(userId) =>{\r\n//            dispatch(followAC(userId));\r\n//        },\r\n//            \r\n//        unfollow:(userId) =>{\r\n//            dispatch(unfollowAC(userId));\r\n//        },\r\n//        setUsers:(users) =>{\r\n//            dispatch(setUserAC(users));\r\n//        },\r\n//        setCurrentPage:(pageNumber) =>{\r\n//            dispatch(setCurrentPageAC(pageNumber));\r\n//        },\r\n//        setTotalUsersCount:(totalCount) =>{\r\n//            dispatch(setTotalUsersCountAC(totalCount));\r\n//        },\r\n//        toggleIsFetching:(isFetching)=>{\r\n//            dispatch(toggleIsFetchingAC(isFetching))\r\n//        }\r\n//\r\n//    }\r\n//}\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    follow, unfollow, setCurrentPage, toggleFollowingProgress\r\n    , getUsers: requestUsers\r\n}),\r\n\r\n)(UsersContainer)\r\n//////export default  withAuthRedirect(connect(mapStateToProps, {\r\n// //   follow, unfollow, setCurrentPage, toggleFollowingProgress\r\n// //   , requestUsers\r\n////}(UsersContainer))\r\n//!сократил,и убрал AC в конце,followAC = follow\r\n//!теперь раз одиноковые названия,то сократив вот так: follow:follow = follow без присваивания \r\n          ","import {UsersAPI} from '../api/api'\r\nimport {profileAPI} from '../api/api'\r\nimport {stopSubmit} from \"redux-form\";\r\nconst ADDUser = 'ADDUser'\r\nconst SET_USER_PROFILE ='SET_USER_PROFILE'\r\nconst SOCIAL_NETWORKS = 'SOCIAL_NETWORKS'\r\nconst SET_STATUS = 'SET_STATUS'\r\nconst SET_SUCCESS_PHOTOS = 'SET_SUCCESS_PHOTOS'\r\nconst SET_INFORMATION ='SET_INFORMATION'\r\nlet initialState ={\r\n  posts: [\r\n    { id: 1, message: 'ohh,cool', likecounts: '15' },\r\n    { id: 2, message: 'like it', likecounts: '10' },\r\n  ],\r\n    profile: null,\r\n    socialNetworks: [],\r\n    status: \"\",\r\n    info:{}\r\n  \r\n}\r\n\r\nconst profilePageReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADDUser:{\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,//или же userName//state.profilepage.newposttext разницы нету все равно приходит через параметры\r\n                likecounts: 0,\r\n              }\r\n              return {\r\n                ...state,\r\n                posts : [...state.posts,newPost],\r\n                newPostText : ''\r\n              }\r\n             \r\n              //return stateCopy;\r\n            }                                      /* старый вид==теперь рефакторим \r\n                                                      let stateCopy = {\r\n                                                          ...state,\r\n\r\n                                                      }\r\n                                                      stateCopy.posts = [...state.posts]\r\n                                                      stateCopy.posts.push(newPost);\r\n                                                      stateCopy.newPostText = ''\r\n                                                      return stateCopy;\r\n                                                    }\r\n                                                    */\r\n            //return stateCopy;\r\n        case SET_USER_PROFILE:{\r\n          return  {...state,profile:action.profile}\r\n        }\r\n        case SET_STATUS:{\r\n          return {...state,status:action.status}\r\n        }\r\n      case SOCIAL_NETWORKS:{\r\n        return{\r\n          ...state,\r\n          socialNetworks:[action.contacts]\r\n        }\r\n      }\r\n        case SET_SUCCESS_PHOTOS:{\r\n            debugger\r\n            return {\r\n                ...state,\r\n                profile: {...state.profile,photos:action.file}//копирую профайл ,потому что мы его не меняем,поэтому я  изменяю только  фото,в профайле фото лежит,поэтому копирую\r\n            }\r\n        }\r\n        case SET_INFORMATION:{\r\n            return {\r\n                ...state,\r\n                profile: {...state.profile,info:action.info}\r\n            }\r\n        }\r\n\r\n                                                    /*let stateCopy = {...state}\r\n                                                    stateCopy.newPostText = action.newText;\r\n                                                    return stateCopy; */\r\n\r\n   \r\n default:\r\n  return state;\r\n                                          \r\n}\r\n}\r\n\r\n\r\n\r\nexport let addUserCreate =(newPostText)=>{\r\n    return{\r\n      type:ADDUser,\r\n      newPostText\r\n    }\r\n  }\r\n \r\n  export let setUserProfile =(profile)=>{\r\n    return{\r\n      type:SET_USER_PROFILE,\r\n      profile\r\n\r\n    }\r\n  }\r\n  export let setSocialNetworks=(contacts)=>{\r\n    return{\r\n      type:SOCIAL_NETWORKS,\r\n      contacts\r\n    }\r\n  }\r\n  export let setStatus=(status)=>{\r\n    return{\r\n      type:SET_STATUS,\r\n      status\r\n    }\r\n  }\r\n\r\n  export let setSuccessPhotos =(file)=>{\r\n    return{\r\n        type:SET_SUCCESS_PHOTOS,\r\n        file\r\n    }\r\n  }\r\nexport let setUserInformation =(info)=>{\r\n    return{\r\n        type:SET_INFORMATION,\r\n        info\r\n    }\r\n}\r\n\r\n\r\nexport const profileThunk = (userId) => async(dispatch) =>{\r\n \r\n    let response = await UsersAPI.profile(userId)\r\n\r\n        dispatch(setUserProfile(response.data));\r\n        dispatch(setSocialNetworks(response.data.contacts))\r\n\r\n  }\r\n\r\n\r\n    export const getStatus = (userId) => async (dispatch) => {\r\n\r\n        let response = await profileAPI.getStatus(userId)\r\n\r\n        dispatch(setStatus(response.data));\r\n    }\r\n\r\n\r\n\r\nexport const updateStatus = (status) =>(dispatch) =>  {\r\n \r\n    profileAPI.updateStatus(status)\r\n      .then(response => {\r\n        if (response.data.resultCode === 0) {\r\n          dispatch(setStatus(status));\r\n        }\r\n        // data.data.resultCode.\r\n      })\r\n  }\r\nexport const updatePhotoSuccess = (file) =>async (dispatch) =>  {\r\n\r\n    let response = await profileAPI.updatePhotos(file)\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setSuccessPhotos(response.data.data.photos))//просто обнавляем данные,потому что в серваке уже отправлена моя фотка,осталось ее только обновить таким способом\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const updateInformation = (profile) =>async (dispatch,getState) => {\r\n\r\n    const userId = getState().auth.userId\r\n    let response = await profileAPI.information(profile)\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(profileThunk(userId));\r\n    }else{\r\n        debugger\r\n        dispatch(stopSubmit('editProfile-form', {_error: response.data.messages[0] }));\r\n        return Promise.reject( response.data.messages[0]);\r\n    }\r\n}\r\n\r\n//dispatch(stopSubmit(\"editProfile-form\", {_error: response.data.messages[0] }));\r\n\r\n    //dispatch(stopSubmit(\"editProfile-form\", {'contacts':{: response.data.messages[0] }}));\r\n    //return Promise.reject( response.data.messages[0]);\r\n\r\n    // data.d\r\n\r\nexport default profilePageReducer","import React from 'react';\r\nimport s from './Post.module.css'\r\nconst Post = (props) => {\r\n    return (\r\n    <div className={s.item}>\r\n      <img src ='https://i.pinimg.com/600x315/1e/d3/0d/1ed30d98f49be532ae58c62f33677b16.jpg' />\r\n       {props.message}\r\n      <div>\r\n        <span> like {props.likecounts}</span>\r\n      </div>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPost.module.css'\r\nimport Post from './Post/Post';\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport { required ,maxLengthCreator} from '../../../utils/validators/validators';\r\nimport { Textarea } from '../../../common/loader/FormsControls/FormControls';\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nconst addNewPostForm =(props)=>{\r\n\r\n  return <>\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field  component={ Textarea } name='newPostText' placeholder='enter your post'   validate={[required, maxLength10]} />\r\n      </div>\r\n      <div>\r\n        <button >add post</button>\r\n      </div>\r\n    </form>\r\n  </>\r\n}\r\nconst AddMyPostReduxForm  = reduxForm({form: 'addPostForm'})(addNewPostForm)\r\n\r\n\r\n\r\nconst MyPost = (props) => {\r\n console.log('render')\r\n  let postsElements = [...props.posts].reverse().map(m=> <Post key={m.id}message= {m.message} likecounts ={m.id} />)\r\n  \r\n   \r\n  let addNewPost = (values) =>{\r\n    props.addUser(values.newPostText);\r\n  }\r\n \r\n  return (\r\n    <div className={s.content}>\r\n      <div className={s.item}>\r\n        <AddMyPostReduxForm onSubmit={addNewPost} />\r\n        <div className={s.postUser}>\r\n          {postsElements}\r\n        </div>\r\n        <div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default MyPost;","import {addUserCreate ,\r\n\r\n  } from '../../../../redux/profilePage-reducer';\r\nimport MyPost from './MyPost';\r\n\r\nimport {connect} from 'react-redux';\r\n\r\n\r\n\r\nlet mapStateToProps =(state)=>{\r\n  return{\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText\r\n  }\r\n};\r\n\r\nlet mapDispatchToProps =(dispatch)=>{\r\n  return{\r\n    addUser:(newPostText)=>{\r\n      dispatch(addUserCreate(newPostText))\r\n    }\r\n  }\r\n};\r\n\r\nlet MyPostContainer = connect(mapStateToProps,mapDispatchToProps) (MyPost)\r\n  \r\n\r\nexport default MyPostContainer;","import React, {useEffect, useState} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {updateStatus} from \"../../../redux/profilePage-reducer\";\r\n\r\n\r\nconst profileStatus =(props)=>{\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [status, setStatus] = useState(props.status);\r\n\r\n    let activateEditMode=(props)=>{\r\n        setEditMode(true)\r\n    }\r\n    let deactivateEditMode=()=>{\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n    let onStatusChange=(e)=>{\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n        return <>\r\n            { !editMode &&\r\n                <div>\r\n                  <b>status:</b>  <span onDoubleClick={activateEditMode}>{status || '---'}</span>\r\n\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input value={status} onBlur={ deactivateEditMode} autoFocus={true} onChange={onStatusChange}/>\r\n                </div>\r\n            }\r\n        </>\r\n    }\r\n\r\n\r\nlet mapStateToProps =(state)=>({\r\n    status:state.profilePage.status\r\n})\r\nexport default connect(mapStateToProps,{updateStatus})(profileStatus)","import React from \"react\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport {createField, Input} from \"../../../common/loader/FormsControls/FormControls\";\r\nimport {required} from \"../../../utils/validators/validators\";\r\nimport s from './../ProfileInfo.module.css'\r\nimport style from \"../../../common/loader/FormsControls/FormsControl.module.css\";\r\n\r\n\r\nexport const ProfileDataForm =({handleSubmit,profile,error})=>{\r\n    return(\r\n        <form onSubmit={handleSubmit} >\r\n            <div>\r\n                <button  >save</button>\r\n\r\n            </div>\r\n            <div>\r\n                <b >Full Name</b>:{createField(\"FullName\",\"fullName\",[required],Input,null) }\r\n            </div>\r\n            {/*------------------*/}\r\n\r\n              <div>\r\n                <b>looking For A Job</b>:{createField(null,\"lookingForAJob\",[],Input,null,{type:'checkbox'},null)}\r\n            </div>\r\n\r\n            <div>\r\n                <b>My Professional Skills</b>:{createField(\"Professional Skills\",\"lookingForAJobDescription\",[required],Input,null)}\r\n            </div>\r\n\r\n            {/*------------------*/}\r\n            <div>\r\n                <b>About Me</b>:{createField(\"About Me\",\"aboutMe\",[required],'textarea',null)}\r\n            </div>\r\n            {/*------------------*/}\r\n            <div>\r\n                <b>Contacts</b>: {Object.keys(profile.contacts).map(key=>{\r\n                return <div className={s.contacts} key={key}>\r\n                    <b>{key}: {createField(key,\"contacts.\" +  key,[],Input)}</b>\r\n                </div>\r\n            })}\r\n\r\n            </div>\r\n            {error &&  <div className={style.fromSummaryError}>\r\n                {error}\r\n            </div>\r\n            }\r\n\r\n        </form>\r\n\r\n\r\n)\r\n}\r\n\r\n\r\nconst ProfileDataReduxForm  = reduxForm({form: 'editProfile-form'})(ProfileDataForm)\r\n\r\nexport default ProfileDataReduxForm","import React, {useState} from 'react';\r\nimport Reloader from '../../common/loader/loader';\r\nimport s from './ProfileInfo.module.css'\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport ProfileDataReduxForm from \"./ProfileDataForm/ProfileDataForm\";\r\n\r\n\r\nfunction ProfileInfo({profile,updatePhotoSuccess,isOwner,status,updateStatus,updateInformation}) {\r\n    const [editMode, setEditMode] = useState(false);\r\n    if (!profile) {\r\n        return <Reloader/>\r\n    }\r\n    let onMainPhotosSelected = (e) => {\r\n        if (e.target.files) {\r\n            updatePhotoSuccess(e.target.files[0])\r\n        }\r\n    }\r\n    const onSubmit = (formData) => {\r\n        debugger\r\n        updateInformation(formData).then(\r\n            ()=>{\r\n                setEditMode(false)\r\n            }\r\n        )\r\n       // console.log(formData)\r\n\r\n\r\n    }\r\n\r\n    return <div className={s.content}>\r\n        <div className={s.profileDescription}>\r\n            <img\r\n                src={profile.photos.large || 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSS78NndbZiK_0eG0HQCpI3zqFvdKfpkJCKSb3dcdpdSofQuOwtucAgSIH9LujQgU-xY7U&usqp=CAU'}\r\n                className={s.photoUrl}/>\r\n            {isOwner && <input type={'file'} onChange={onMainPhotosSelected}/>}\r\n\r\n\r\n            {editMode ? <ProfileDataReduxForm onSubmit={onSubmit} initialValues={profile}  profile={profile} />\r\n                       :<ProfileData profile={profile} editMode={editMode} isOwner={isOwner} goToEditMode={()=>{setEditMode(true)}}/> }\r\n\r\n\r\n\r\n            <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n        </div>\r\n\r\n    </div>\r\n\r\n}\r\nconst ProfileData =({profile,isOwner,goToEditMode})=>{\r\n    return <div>\r\n        {/*{!isOwner &&  editMode ?<button>edit</button>:<button onClick={()=>{setEditMode(true)}}>edit</button>}*/}\r\n        {isOwner && <div><button onClick={goToEditMode}>edit</button></div>}\r\n        <div>\r\n            <b>Full Name</b>:{profile.fullName}\r\n        </div>\r\n        {/*------------------*/}\r\n        <div>\r\n            <b>looking For A Job</b>:{profile.lookingForAJob? 'yes':'no'}\r\n        </div>\r\n        {profile.lookingForAJob &&\r\n            <div>\r\n                <b>My Professional Skills</b>:{profile.lookingForAJobDescription}\r\n            </div>\r\n        }\r\n        {/*------------------*/}\r\n        <div>\r\n            <b>About Me</b>:{profile.aboutMe}\r\n        </div>\r\n        {/*------------------*/}\r\n        <div>\r\n            <b>Contacts</b>:{Object.keys(profile.contacts).map(key=>{\r\n                return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]} />\r\n        })}\r\n        </div>\r\n        {/*------------------*/}\r\n    </div>\r\n}\r\n\r\n\r\nconst Contact =({contactTitle,contactValue})=>{\r\n    return <div className={s.contacts}><b>{contactTitle}</b>:{contactValue}</div>\r\n}\r\nexport default ProfileInfo;","import React from 'react';\r\n//import MyPost from './MyPost/Post/MyPost';\r\nimport MyPostContainer from './MyPost/Post/MyPostContainer';\r\nimport s from './Profile.module.css'\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport {updateInformation, updatePhotoSuccess} from \"../../redux/profilePage-reducer\";\r\nconst Profile = (props) => {\r\n  \r\n    return <div className={s.content}>\r\n      <ProfileInfo isOwner ={!props.match.params.userId}\r\n          profile={props.profile} socialNetworks={props.socialNetworks} isAuth={props.isAuth}\r\n          status={props.status}  updateStatus={props.updateStatus}\r\n                   updatePhotoSuccess={props.updatePhotoSuccess} updateInformation={props.updateInformation}/>\r\n      <MyPostContainer/> \r\n    </div>\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile'\r\nimport {connect} from 'react-redux'\r\nimport * as axios from 'axios';\r\nimport {\r\n    setUserProfile,\r\n    setSocialNetworks,\r\n    profileThunk,\r\n    getStatus,\r\n    updateStatus,\r\n    updatePhotoSuccess, updateInformation\r\n} from './../../redux/profilePage-reducer'\r\nimport { withRouter } from 'react-router';\r\nimport { Redirect } from 'react-router';\r\nimport { withAuthRedirect } from '../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\n//setInfoAboutUser  \r\nclass ProfileContainer extends React.Component {\r\n    refreshProfile=()=>{ //что бы код не захломлять,создадим функцию,с меотодом которым ранее писали в componentDidMount\r\n        debugger\r\n        let userId = this.props.match.params.userId;// приходит благодаря подключенному withRoute именно match.params и тд\r\n        if (!userId) {//!допустимо что бы Ui работал BLL адресами,поэтому не запихал в thunki\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId){\r\n                this.props.history.push('/login')\r\n            }\r\n        }\r\n        this.props.profileThunk(userId)\r\n        this.props.getStatus(userId)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile()\r\n    }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n      if (this.props.match.params.userId !=prevProps.match.params.userId){\r\n          this.refreshProfile()\r\n      }\r\n  }\r\n\r\n    render(){\r\n      return (\r\n      <Profile isOwner ={this.props.match.params.userId}\r\n          {...this.props} profile={this.props.profile} socialNetworks={this.props.socialNetworks} isAuth={this.props.auth}\r\n      status={this.props.status}  updateStatus={this.props.updateStatus}\r\n               updatePhotoSuccess={this.props.updatePhotoSuccess} updateInformation={this.props.updateInformation}/>\r\n      )\r\n   }\r\n}\r\n\r\nlet AuthRedirectComponent = withAuthRedirect(ProfileContainer)\r\n//export default compose(\r\n//  connect(mapStateToProps,{setUserProfile,setSocialNetworks,profileThunk}),\r\n//  withRouter,\r\n//  withAuthRedirect\r\n//)(ProfileContainer)\r\n\r\nlet mapStateToProps = (state) =>({\r\n    profile:state.profilePage.profile,\r\n    //aboutUser:state.profilePage.about,\r\n    socialNetworks:state.profilePage.socialNetworks,\r\n    status:state.profilePage.status,\r\n    authorizedUserId:state.auth.userId\r\n})\r\n\r\nlet withUrlDataContainerComponent = withRouter(AuthRedirectComponent)//withRouter дает дополнительные данные в url такие как match.params и тд\r\nexport default connect(mapStateToProps,{setUserProfile,setSocialNetworks,profileThunk,getStatus,updateStatus,updatePhotoSuccess,\r\n    updateInformation})(withUrlDataContainerComponent);","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\nconst Header = (props) => {\r\n\r\n    return <header className= {s.header}>\r\n        <img src='https://www.freelogodesign.org/Content/img/logo-ex-7.png' />\r\n        <div className={s.loginBlock}>\r\n            {props.isAuth\r\n                ?<div>{props.login} / <button onClick={props.LogOut}>Logout</button></div>\r\n                :<NavLink to={'/login'}>Login</NavLink>}\r\n        </div>\r\n    </header>\r\n}\r\n\r\nexport default Header;","import {authAPI, securityAPI, UsersAPI} from '../api/api'\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA'\r\nconst SET_CAPTCHA_URL = 'SET_CAPTCHA_URL'\r\nlet initialState = {\r\n userId: null,\r\n email: null,\r\n login: null,\r\n isAuth:false,\r\n captchaUrl:null\r\n}\r\n\r\n let authReducer = (state = initialState, action) => {\r\n   switch (action.type) {\r\n       case SET_CAPTCHA_URL:\r\n        case SET_USER_DATA:\r\n            return {\r\n              ...state,\r\n             ...action.data,//!деструктуризация когда несколько обьектов можно сложить в одну,что то вроде этого\r\n            }\r\n\r\n\r\n\r\n       default:\r\n          return  state;\r\n    }\r\n\r\n}\r\n\r\nexport let setAuthUserData =(userId,email,login,isAuth)=>{\r\n    return {\r\n      type: SET_USER_DATA,\r\n      data:{userId,email,login,isAuth}\r\n    }\r\n  }\r\nexport let setCaptchaUrl =(captchaUrl)=>{\r\n    return{\r\n        type: SET_CAPTCHA_URL,\r\n        data:{captchaUrl}\r\n    }\r\n}\r\n\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n\r\n    let response = await UsersAPI.header()\r\n\r\n    if (response.data.resultCode === 0) {\r\n        debugger\r\n        let {id, email, login} = response.data.data\r\n        dispatch(setAuthUserData(id, email, login, true))\r\n    }\r\n\r\n\r\n}\r\n\r\nexport const  LoginThunk =(login,password,rememberMe,captcha)=> async(dispatch)=> {\r\n\r\n       let response = await authAPI.loginAPI(login, password, rememberMe, captcha)\r\n\r\n                if (response.data.resultCode === 0) {\r\n                    dispatch(getAuthUserData())\r\n                } else {\r\n                    if (response.data.resultCode === 10){\r\n                       dispatch(getCaptchaUrl())\r\n                    }\r\n                    let message = response.data.messages.length > 0 ? response.data.messages[0] : 'Error!wrong login or password';\r\n                    dispatch(stopSubmit('login', {_error: message}))\r\n                }\r\n\r\n    }\r\n\r\nexport const  getCaptchaUrl =()=>async (dispatch)=>{\r\n    let response = await securityAPI.getCaptchaUrl()\r\n    const captchaUrl = response.data.url\r\n        dispatch(setCaptchaUrl(captchaUrl))\r\n\r\n}\r\n\r\nexport const  LogOut =()=>async (dispatch)=>{\r\n    let response = await authAPI.LogOut()\r\n                if (response.data.resultCode === 0) {\r\n                    dispatch(setAuthUserData( null, null,null,false))\r\n                }\r\n    }\r\n\r\n  \r\n  export default authReducer","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Header from './Header';\r\nimport {setAuthUserData,getAuthUserData,LogOut} from './../../redux/auth-reducer'\r\nimport {UsersAPI} from '../../api/api'\r\nclass HeaderContainer extends React.Component {\r\n\r\n\r\n\r\n    render() {\r\n        return <Header {...this.props}/>\r\n    }\r\n}\r\nconst mapStateToProps=(props)=> ({\r\n    isAuth:props.auth.isAuth,\r\n    login:props.auth.login,\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps,{setAuthUserData,getAuthUserData,LogOut})(HeaderContainer);","import React from 'react';\r\nimport {reduxForm} from 'redux-form'\r\nimport s from './login.module.css';\r\n\r\n\r\nimport {createField, Input} from \"../common/loader/FormsControls/FormControls\";\r\nimport {required} from \"../utils/validators/validators\";\r\nimport {connect} from 'react-redux';\r\nimport {LoginThunk} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from 'react-router-dom';\r\nimport style from './../common/loader/FormsControls/FormsControl.module.css'\r\n\r\nconst LoginForm = ({handleSubmit,error,captchaUrl}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {/*<div>\r\n            <Field placeholder={\"Login\"} name={\"login\"}  className={s.box} validate={[required ]}component={Input}/>\r\n        </div>*/}\r\n            {createField(\"Login\",\"email\",[required],Input,s.box)}\r\n            {createField(\"Password\",\"password\",[required],Input,s.pass,{type:'password'})}\r\n            {createField(null,\"rememberMe\",[],Input,null,{type:'checkbox'},'rememberMe')}\r\n            {captchaUrl && <img src={captchaUrl} />}\r\n            {captchaUrl && createField(\"Symbols from image\",\"captcha\",[required],Input,null,{})}\r\n            {/* <div>\r\n            <Field placeholder={\"Password\"} name={\"password\"} validate={[required]}component={Input} type = 'password'className={s.pass}  />\r\n        </div>\r\n        <div>\r\n            <Field type={\"checkbox\"}  name={\"rememberMe\"} component={'input'}/> remember me\r\n        </div>*/}\r\n            {error &&  <div className={style.fromSummaryError}>\r\n                    {error}\r\n                </div>\r\n            }\r\n        <div>\r\n            <button className={s.btn}>Login</button>\r\n        </div>\r\n    </form>\r\n    )\r\n}\r\nconst LoginReduxForm  = reduxForm({form: 'login'})(LoginForm)\r\n\r\nexport function Login(props) {\r\n    const onSubmit = (formData) => {\r\n       //console.log(formData)\r\n         props.LoginThunk(formData.email, formData.password, formData.rememberMe, formData.captcha,)\r\n        //authAPI.loginAPI(formData)\r\n    }\r\n    if (props.isAuth) {\r\n        return <Redirect to={'/Profile'}/>\r\n    }\r\n    return (\r\n        <div>\r\n            <h1>\r\n                Login\r\n            </h1>\r\n            <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl}/>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps =(state)=>({\r\n    captchaUrl:state.auth.captchaUrl,\r\n    isAuth:state.auth.isAuth,\r\n});\r\nexport default connect(mapStateToProps,{LoginThunk})(Login)","import {getAuthUserData} from \"./auth-reducer\";\r\n\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS'\r\n\r\nlet initialState = {\r\n    initialized:false\r\n}\r\n\r\n let appReducer = (state = initialState, action) => {\r\n   switch (action.type) {\r\n        case INITIALIZED_SUCCESS:{\r\n            return {\r\n              ...state,\r\n                initialized:true,\r\n            }\r\n          }\r\n\r\n        default:\r\n          return  state;\r\n    }\r\n\r\n}\r\n\r\nexport let initializedSuccess =()=>{\r\n    return {\r\n      type: INITIALIZED_SUCCESS\r\n    }\r\n  }\r\n\r\n\r\nexport const  InitializeApp =()=>(dispatch)=>{\r\n       let promise = dispatch(getAuthUserData());\r\n        Promise.all([promise]).then(()=>{\r\n            dispatch(initializedSuccess())\r\n        })\r\n    }\r\n\r\n\r\n  export default appReducer","let initialState = {\r\n    Friends: [\r\n        { id: 1, img: 'https://miro.medium.com/max/1000/0*6e2K0U6ZkN9Ju9iL.jpg', name: 'Andrew' },\r\n        { id: 2, img: 'https://klike.net/uploads/posts/2019-03/1551511862_28.jpg', name: 'Sasha' },\r\n        { id: 3, img: 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQLQIOx_SCaYRInZ3jwT5QuwBVLGeBBk9T_IA&usqp=CAU', name: 'Sveta' },\r\n      ],\r\n}\r\nexport let sidebarReducer =(state = initialState, action) => {\r\n\r\n    return state;\r\n}","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profilePageReducer from \"./profilePage-reducer\";\r\nimport {dialogsPageReducer} from \"./dialogsPage-reducer\";\r\nimport {sidebarReducer} from \"./sidebar-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport usersReducer from './users-reducer';\r\nimport  thunkMiddleware from \"redux-thunk\"\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage:profilePageReducer,\r\n    dialogsPage :dialogsPageReducer,\r\n    sideBar:sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth:authReducer,\r\n    form: formReducer,\r\n    app:appReducer,\r\n\r\n});\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n const store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\n//window.__store__ = store;\r\nexport default store;\r\n","import React , { Suspense } from 'react';\r\nimport './App.css';\r\nimport Navbar from './components/NavBar/Navbar';\r\nimport {Route, Switch, withRouter} from 'react-router-dom';\r\nimport News from './components/News/News';\r\nimport Music from './components/Music/Music';\r\nimport Settings from './components/Settings/Settings';\r\n\r\nimport UsersContainer from './components/Users/UsersContainer';\r\nimport ProfileContainer from './components/Profile/ProfileContainer';\r\nimport HeaderContainer from './components/Header/HeaderContainer';\r\nimport Login from './components/Login/login'\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {InitializeApp} from \"./redux/app-reducer\";\r\nimport Reloader from \"./components/common/loader/loader\";\r\nimport store from \"./redux/redux-store\";\r\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\r\n\r\n\r\n//import DialogsContainer from \"./components/Dialogs/DialogsContainer\";\r\n\r\n\r\nclass App extends React.Component {\r\n    componentDidMount() {\r\n        this.props.InitializeApp()\r\n    }\r\n    render() {\r\n       if (!this.props.initialized) {\r\n           return <Reloader/>\r\n       }\r\n        return (\r\n\r\n            <div className='app-wrapper'>\r\n                <HeaderContainer/>\r\n                <Navbar/>\r\n                <div className='app-wrapper-content'>\r\n                    <Switch>\r\n                        {/*<Route path='/Dialogs' render={() => <DialogsContainer/>}/>*/}\r\n                        <Suspense fallback={<div><Reloader /></div>}>\r\n                        <Route path='/Dialogs' render={() => <DialogsContainer/>}/>\r\n                        <Route path='/Profile/:userId?' render={() => <ProfileContainer/>}/> {/**/}\r\n                        <Route path='/Users' render={() => <UsersContainer/>}/>\r\n                        <Route path='/Login' render={() => <Login/>}/>\r\n                        <Route path='/News' component={News}/>\r\n                        <Route path='/Music' component={Music}/>\r\n                        <Route path='/Settings' component={Settings}/>\r\n                    </Suspense>\r\n                    </Switch>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nlet mapStateToProps =(state)=>({\r\n    initialized:state.app.initialized\r\n})\r\nexport default compose(\r\n    withRouter (\r\n    connect(mapStateToProps,{InitializeApp})(App)\r\n    )\r\n);","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport store from './redux/redux-store';\r\nimport {Provider} from 'react-redux';\r\n\r\n\r\n  ReactDOM.render(\r\n    <BrowserRouter>\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>\r\n    </BrowserRouter>, document.getElementById('root'));\r\n    \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControl_formControl__2K2gY\",\"error\":\"FormsControl_error__36QMp\",\"someError\":\"FormsControl_someError__1hQKx\",\"fromSummaryError\":\"FormsControl_fromSummaryError__27Sen\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"friends_container__2ERzT\",\"block\":\"friends_block__Jbh7Z\",\"img\":\"friends_img__1ejwD\",\"title\":\"friends_title__yWr5g\",\"name\":\"friends_name__nibai\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileDescription\":\"ProfileInfo_profileDescription__33cDT\",\"photoUrl\":\"ProfileInfo_photoUrl__1qZEk\",\"contacts\":\"ProfileInfo_contacts__2XOW3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"login_box__zMs1j\",\"pass\":\"login_pass__Dic02\",\"btn\":\"login_btn__1v1YL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__ZexK_\",\"pageNumber\":\"Paginator_pageNumber__azgp_\",\"selectedPage\":\"Paginator_selectedPage__2rquU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"Users_userPhoto__1b-5B\",\"activeNumber\":\"Users_activeNumber__3rVIX\",\"button\":\"Users_button__27qpS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"MyPost_item__3sXgB\",\"postUser\":\"MyPost_postUser__3Dn4U\"};","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router';\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state) => {\r\n    return{\r\n      isAuth:state.auth.isAuth,\r\n    }\r\n  };\r\n\r\nexport const withAuthRedirect =(Component) => {\r\n   class RedirectComponent extends React.Component{\r\n       render() {\r\n           if(!this.props.isAuth) return <Redirect to='/login' />\r\n           return <Component {...this.props} />\r\n       }\r\n       \r\n    }\r\n    \r\n      let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n    return ConnectedAuthRedirectComponent\r\n\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2Wzue\",\"loginBlock\":\"Header_loginBlock__mnfR7\"};"],"sourceRoot":""}